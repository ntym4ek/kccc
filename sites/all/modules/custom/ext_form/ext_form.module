<?php

// формы для упорядочивания вынесены в отдельные файлы
include 'includes/subscriptions.ext_form.inc';

/**
 *  Implementation of hook_menu()
 */
function ext_form_menu()
{
  // форма Отписки от рассылки
  $items['unsubscribe'] = array(
    'title' => t('Unsubscribe'),
    'page callback' => 'ext_form_unsubscribe_callback',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}



function ext_form_search_form($form, $form_state)
{
  $form['k'] = [
    '#type' => 'textfield',
    '#attributes' => ['placeholder' => t('search')],
    '#prefix' => '<div class="form-item input-group">'
  ];
  $form['submit'] = [
    '#type' => 'submit',
    '#value' => '<i class="icon icon-095"></i>',
    '#attributes' => ['class' => ['btn', 'btn-brand']],
    '#theme_wrappers' => ['button_icon'],
    '#suffix' => '</div>'
  ];

  return $form;
}
function ext_form_search_form_submit($form, $form_state)
{
  drupal_goto('poisk', ['query' => ['k' => $form_state['values']['k']]]);
}

/**
 * Implements hook_form_alter()
 */
function ext_form_form_alter(&$form, &$form_state, $form_id)
{
  // отключить HTML5 валидацию на всех формах
  $form['#attributes']['novalidate'] = '';

  // оформление кнопки
  if (strpos($form_id, 'webform_client_form') === 0) {
    $form["actions"]["submit"]["#attributes"]["class"][] = 'btn-brand';
    $form["actions"]["submit"]["#attributes"]["class"][] = 'btn-wide';
  }

  $form['#after_build'][] = 'ext_form_form_captcha_after_build';

}

/**
 * An after build handler to remove captcha
 */
function ext_form_form_captcha_after_build($form, &$form_state)
{
  // убрать капчу для local сервера
  if (strpos($GLOBALS['base_url'], '.local') !== false) {
    if (isset($form['captcha'])) { unset($form['captcha']); }
    if (isset($form["actions"]["captcha"])) { unset($form["actions"]["captcha"]); }
  }

  // капча внедряется перед кнопкой сабмита, что в случае input-group неверно
  // увеличиваем вес капчи, чтобы поставить её ниже кнопки
  if ($form['#form_id'] == 'ext_form_subscribe_form') {
    $form["captcha"]["#weight"] = 0;
  }

  return $form;
}

/**
 * Implements hook_form_FORM_ID_alter()
 */
function ext_form_form_webform_client_form_14_alter(&$form, &$form_state)
{
  // ajax обновление формы отправки заявки
  $form['#prefix'] = '<div id="' . $form["#id"] . '-wrapper">';
  $form['#suffix'] = '</div>';

  $form['actions']['submit']['#ajax'] = [
    'callback' => 'ext_form_webform_client_form_14_ajax_callback',
    'wrapper' => $form["#id"] . '-wrapper',
  ];

  $form["#submit"][] = 'ext_form_rebuild_submit';
}

function ext_form_webform_client_form_14_ajax_callback($form, $form_state)
{
  if (!empty($form["#submission"])) {
    $form['submitted']['complete'] = [
      '#markup' => '<div class="complete"><h4>' . t('Message been sent.') . '</h4></div>',
    ];
  }
  // сбросить сообщение после обновления страницы
  unset($_SESSION["webform_confirmation"]);

  return $form;
}

/**
 * Implements hook_form_FORM_ID_alter()
 */
function ext_form_form_webform_client_form_21_alter(&$form, &$form_state)
{
  // ajax обновление формы отправки заявки
  $form['#prefix'] = '<div id="' . $form["#id"] . '-wrapper">';
  $form['#suffix'] = '</div>';

  $form['actions']['submit']['#ajax'] = [
    'callback' => 'ext_form_webform_client_form_21_ajax_callback',
    'wrapper' => $form["#id"] . '-wrapper',
  ];
  $form["actions"]["submit"]["#attributes"]["class"][] = 'btn-full-wide';

  $form["#submit"][] = 'ext_form_rebuild_submit';
}
function ext_form_webform_client_form_21_ajax_callback($form, $form_state)
{
  if (!empty($form["#submission"])) {
    $form['submitted']['complete'] = [
      '#markup' => '<div class="complete">' .
                      '<h4>' . t('Message been sent.') . '</h4>' .
                      '<p>' . t('Our manager will study it and contact you if necessary') . '</p>' .
                    '</div>',
    ];
  }
  // сбросить сообщение после обновления страницы
  unset($_SESSION["webform_confirmation"]);

  return $form;
}

/**
 * Implements hook_form_FORM_ID_alter()
 */
function ext_form_form_webform_client_form_23_alter(&$form, &$form_state)
{
  // ajax обновление формы отправки заявки
  $form['#prefix'] = '<div id="' . $form["#id"] . '-wrapper">';
  $form['#suffix'] = '</div>';

  $form['actions']['submit']['#ajax'] = [
    'callback' => 'ext_form_webform_client_form_23_ajax_callback',
    'wrapper' => $form["#id"] . '-wrapper',
  ];

  $form["#submit"][] = 'ext_form_rebuild_submit';
}
function ext_form_webform_client_form_23_ajax_callback($form, $form_state)
{
  if (!empty($form["#submission"])) {
    $form['submitted']['complete'] = [
      '#markup' => '<div class="complete">' .
                     '<h4>' . t('Message been sent.') . '</h4>' .
                    '<p>' . t('As soon as we have a suitable vacancy, we will consider your resume among the first.') . '</p>' .
                   '</div>',
    ];
  }
  // сбросить сообщение после обновления страницы
  unset($_SESSION["webform_confirmation"]);

  return $form;
}

function ext_form_rebuild_submit($form, &$form_state)
{
  $form_state['rebuild'] = TRUE;
}

/**
 * Implements hook_preprocess_page().
 */
function ext_form_preprocess_page(&$vars)
{
  if (arg(0) == 'unsubscribe') {
    $vars['is_title_on'] = false;
  }
}
