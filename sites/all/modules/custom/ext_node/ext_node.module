<?php

/**
 * Implements hook_menu_alter()
 */
function ext_node_menu_alter(&$items)
{
  // убрать материалы с Главной
  $items['node']['page callback'] = 'ext_node_empty_front_page_callback';

  // "Удалить" в локальные задачи материала
  // http://xandeadx.ru/blog/drupal/339
  $items['node/%node/delete']['context'] = MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE;

  // удалить встроенный список Блогов, чтобы выводить свой с тем же адресом
  unset($items['blog/%user_uid_optional']);
}

/**
 * menu callback
 * убрать материалы с главной
 */
function ext_node_empty_front_page_callback()
{
  drupal_set_title('');
  return array();
}

/**
 * Implements hook_cron().
 */
function ext_node_cron()
{
  // снять с публикации просроченные Афиши
  ext_node_unpublish_agenda();
}

function ext_node_unpublish_agenda()
{
  $dbr = db_select('node', 'n');
  $dbr->condition('n.type', 'agenda');
  $dbr->addField('n', 'nid');
  $dbr->innerJoin('field_data_field_period', 'fp', 'fp.entity_id = n.nid');
  $dbr->condition('fp.field_period_value2', REQUEST_TIME, '<');
  if ($result = $dbr->execute()->fetchCol()) {
    db_update('node')
      ->fields(['status' => 0])
      ->condition('type', 'agenda')
      ->condition('nid', $result, 'IN')
      ->execute();
  }
}

/**
 * Implements hook_preprocess_page().
 */
function ext_node_preprocess_page(&$vars)
{
  if ($GLOBALS['theme'] == 'kccc') {
    if (arg(0) == 'node' && isset($vars['node'])) {

      // Сформировать Баннер в шапке
      $title_bkg_uri = NULL;

      if ($vars['node']->type == 'agenda')                      { $vars['banner_title'] = t('Events');
                                                                  $title_bkg_uri = 'public://images/page-banners/afisha.jpg'; }
      if ($vars['node']->type == 'article')                     { $vars['banner_title'] = t('Events');
                                                                  $title_bkg_uri = 'public://images/page-banners/novosti.jpg'; }
      if ($vars['node']->type == 'program')                     { $vars['banner_title'] = t('Product portfolio for crop protection');
                                                                  $title_bkg_uri = 'public://images/page-banners/programmy-zashchity.jpg'; }
      if ($vars['node']->type == 'review')                      { $vars['banner_title'] = t('Reviews');
                                                                  $title_bkg_uri = 'public://images/page-banners/otzyvy.jpg'; }
      if ($vars['node']->type == 'job')                         { $vars['banner_title'] = t('Careers');
                                                                  $title_bkg_uri = 'public://images/page-banners/vakansii.jpg'; }
      if ($vars['node']->type == 'culture')                     { $vars['banner_title'] = t('Cultivated plants');
                                                                  $title_bkg_uri = 'public://images/page-banners/spravochniki.jpg'; }
      if ($vars['node']->type == 'disease')                     { $vars['banner_title'] = t('Diseases of crops');
                                                                  $title_bkg_uri = 'public://images/page-banners/spravochniki.jpg'; }
      if ($vars['node']->type == 'pest')                        { $vars['banner_title'] = t('Crop pests');
                                                                  $title_bkg_uri = 'public://images/page-banners/spravochniki.jpg'; }
      if ($vars['node']->type == 'weed')                        { $vars['banner_title'] = t('Weeds');
                                                                  $title_bkg_uri = 'public://images/page-banners/spravochniki.jpg'; }
      if ($vars['node']->type == 'season')                      { $vars['banner_title'] = t('Products in the fields');
                                                                  $title_bkg_uri = 'public://images/page-banners/preparaty-v-pole.jpg'; }
      if ($vars['node']->type == 'blog')                        { $vars['banner_title'] = t('Publications');
                                                                  $title_bkg_uri = 'public://images/page-banners/afisha.jpg'; }
      if ($vars['node']->type == 'video')                       { $vars['banner_title'] = t('Publications');
                                                                  $title_bkg_uri = 'public://images/page-banners/novosti.jpg'; }
      if ($vars['node']->type == 'page')                        { $vars['banner_title'] = drupal_get_title(); }

      // -- Препараты
      if ($vars["node"]->type == 'preparation') {
        if ($cat_info = sec_catalog_get_category_info($vars["node"]->field_prep_category["und"][0]["tid"])) {
          $vars['banner_title'] = $cat_info['title'];
          if ($cat_info['icon_num']) {
            $vars['banner_title'] = '<i class="icon icon-' . $cat_info['icon_num'] . '"></i>' . $vars['banner_title'];
          }
          if ($cat_info['banner']['uri']) {
            $title_bkg_uri = $cat_info['banner']['uri'];
          }
        }
      }

      // -- Прочие страницы (page, webform и тд)
      if (!empty($vars["node"]->field_image_banner)) {
        $title_bkg_uri = $vars["node"]->field_image_banner['und'][0]['uri'];

        // Для вебформ:
        // изменить Заголовок на баннере
        //  - Жалобы и Предложения, Центр идей
        if (in_array($vars["node"]->nid, [14, 15]))             { $vars['banner_title'] = t('Feedback');  }
        //  - Кадровый резерв
        if ($vars["node"]->nid == 23)                           { $vars['banner_title'] = t('Careers');  }
      }

      if ($title_bkg_uri) {
        $vars['banner_url'] = file_create_url($title_bkg_uri);
        $vars['banner_mobile_url'] = image_style_url('banner_mobile', $title_bkg_uri);
        $vars['is_banner_on'] = true;
        $vars['is_title_on'] = false;
      }
    }
  }

}

/**
 * Implements hook_preprocess_node().
 */
function ext_node_preprocess_node(&$vars)
{
  $node = $vars['node'];

  // баннер всегда скрыт
  hide($vars['content']['field_image_banner']);

  hide($vars["content"]["links"]);

  // -- Изображения
  $images = [];
  if ($vars['view_mode'] == 'teaser' && !empty($node->field_image_teaser)) {
    $images[] = $vars['content']['field_image_teaser'][0];
  }
  elseif (!empty($vars['content']['field_images']['#items'])) {
    foreach ($vars['content']['field_images']['#items'] as $key => $file) {
      $images[] = $vars['content']['field_images'][$key];
    }
  }
  elseif (!empty($vars['content']['field_image'])) {
    $images[] = $vars['content']['field_image'][0];
  }
  $vars['images'] = $images;

  hide($vars["content"]["field_image"]);

  // -- Статистика
  $vars['date'] = date('d.m.Y', $node->created);
  $stats = statistics_get($node->nid);
  $vars['stats'] = $stats ?: ['totalcount' => 0];

  // -- Тип Афиша
  if ($node->type == 'agenda') {
    // для Афиши вывести период
    $date_st = date('d.m.Y', $node->field_period['und'][0]['value']);
    $date_fn = date('d.m.Y', $node->field_period['und'][0]['value2']);
    $vars['date'] = $date_st == $date_fn ? $date_st : $date_st . ' - ' . $date_fn;
  }

  // -- Тип Блог
  if ($node->type == 'blog') {
    // флаг "не указывать авторство"
    $vars['display_submitted'] = empty($node->field_flag) || !$node->field_flag["und"][0]["value"];
  }

  // -- Тип Программа защиты
  if ($node->type == 'program') {
    $vars['date'] = '';
    $vars['stats'] = '';
  }

  // -- Типы справочников
  if (in_array($node->type, ['weed', 'disease', 'pest', 'culture'])) {
    $vars['date'] = '';
    $vars['stats'] = '';

    if ($vars['view_mode'] == 'full') {
      // задать шаблон для страницы справочников
      $node_type_suggestion_key = array_search('node__' . $vars['type'], $vars['theme_hook_suggestions']);
      if ($node_type_suggestion_key !== FALSE) {
        array_splice($vars['theme_hook_suggestions'], $node_type_suggestion_key + 1, 0, ['node__handbook__full']);
      }
      $vars["classes_array"][] = 'node-handbook';

      // Меры борьбы
      $vars['measures'] = [];
      if (!empty($vars['content']['field_hb_measure_agro'])) {
        $vars['measures']['agro'] = theme('card_decor', ['icon' => '046', 'title' => t('Agricultural'), 'content' => drupal_render($vars['content']['field_hb_measure_agro'])]);
        hide($vars['content']['field_hb_measure_agro']);
      }
      if (!empty($node->field_hb_measure_chem['und'][0]['value'])) {
        $vars['measures']['chem'] = theme('card_decor', ['icon' => '047', 'title' => t('Chemical'), 'content' => drupal_render($vars['content']['field_hb_measure_chem'])]);
        hide($vars['content']['field_hb_measure_chem']);
      }
    }
  }

  // -- Тип Видео
  if ($node->type == 'video') {
    // преобразовать ссылку https://www.youtube.com/watch?v=BiNh9OXi95g в embed (https://www.youtube.com/embed/BiNh9OXi95g)
    $url = $vars['field_text'][0]['value'];
    if (strpos($url, 'https://youtu.be/') !== false) {
      $vars['video_embed_url'] = str_replace('https://youtu.be/', 'https://www.youtube.com/embed/', $url);
    } elseif (strpos($url, 'https://www.youtube.com/watch?v=') !== false) {
      $vars['video_embed_url'] = str_replace('https://www.youtube.com/watch?v=', 'https://www.youtube.com/embed/', $url);
    }
  }

  // -- Тип Вакансия
  if ($node->type == 'job') {
    $vars['date'] = '';
    $vars['stats'] = '';

    // программно вставить блок формы Отправки резюме
    $block = block_load("webform", 'client-block-21');
    $blocks = _block_render_blocks([$block]);
    $vars['job_webform'] = _block_get_renderable_array($blocks);

    // карточка контакта Отдела кадров
    // todo ID контакта задавать через админку
    $vars['job_contact'] = $vars['auth'] = theme('card_contact', ext_user_get_user_info(28));
  }

  // -- Тип Страница
  if (in_array($node->type, ['page', 'webform'])) {
    // не выводить заголовок и дату
    $vars['date'] = '';
    $vars['title'] = '';
    $vars['stats'] = '';
  }

  // -- Тип Препарат
  if ($node->type == 'preparation') {
    $vars['product_info'] = sec_catalog_get_product_info($vars['node']->nid);

    if ($vars['view_mode'] == 'full') {
      // категория препарата для темизации в цвет
      $vars['classes_array'][] = 'category-' . $category_tid = $vars["node"]->field_prep_category["und"][0]["tid"];

      // В зависимости от вида ссылки на странице препарата может выводиться разная информация.
      // Информация делится на секции: Описание, Опыт применения, Медиа, Документы
      $vars['section'] = $_GET['s'] ?? '';
      // секция Описание
      if (!$vars['section']) {
        // подготовить карточки Регламентов и два пункта Характеристик
        $reglaments_cards = [];
        $cultures = $hobjects = [];
        if ($product_regs = sec_catalog_get_product_reglaments_info($node->nid)) {
          foreach ($product_regs as $reg) {
            $content = theme('content_reglament', ['card' => $reg]);
            $reglaments_cards[] = theme('card_decor', ['icon' => $reg['icon_num'], 'title' => $reg['cultures']['formatted'], 'content' => $content]);
            $cultures = array_merge($cultures, array_values($reg['cultures']['list']));

            foreach ($reg['hobjects']['weed_groups'] as $wg) {
              $hobjects[] = ($wg['lifes'] ? implode(', ', $wg['lifes']) . ' ' : '') . implode(', ', $wg['classes']);
            }
            $hobjects = array_merge($hobjects, $reg['hobjects']['pest_classes']);
            $hobjects = array_merge($hobjects, array_column($reg['hobjects']['list'], 'name'));
          }
        }
        $vars['product_info']['reglaments_cards'] = $reglaments_cards;
        if ($cultures) {
          $vars['product_info']['specs'][] = [
            'icon_num' => '042',
            'text' => drupal_ucfirst(drupal_strtolower(implode(', ', array_unique($cultures)))),
          ];
        }
        if ($hobjects) {
          $vars['product_info']['specs'][] = [
            'icon_num' => '031',
            'text' => drupal_ucfirst(drupal_strtolower(implode(', ', array_unique($hobjects)))),
          ];
        }

        // программно вставить блок Агро Калькулятор
        $block = block_load("ext_block", 'custom-block-agro-calculator');
        $blocks = _block_render_blocks([$block]);
        $vars['block_calc'] = _block_get_renderable_array($blocks);

        // программно вставить блок Связаться с нами
        $block = block_load("ext_block", 'custom-block-contact-us');
        $blocks = _block_render_blocks([$block]);
        $vars['block_contact_us'] = _block_get_renderable_array($blocks);

        // программно вставить блок Рекомендуемые
        $block = block_load("ext_block", 'custom-block-recommended');
        $blocks = _block_render_blocks([$block]);
        $vars['block_recommended'] = _block_get_renderable_array($blocks);

        // программно вставить блок Приложение
        $block = block_load("ext_block", 'custom-block-app');
        $blocks = _block_render_blocks([$block]);
        $vars['block_app'] = _block_get_renderable_array($blocks);
      }

      // секция Опыт применения
      elseif ($vars['section'] == 'primenenie') {
        // программно вставить блок Опыт применения
        $block = block_load("ext_block", 'custom-block-prep-pvp');
        $blocks = _block_render_blocks([$block]);
        $vars['block_prep_pvp'] = _block_get_renderable_array($blocks);

        // программно вставить блок Связаться с нами
        $block = block_load("ext_block", 'custom-block-contact-us');
        $blocks = _block_render_blocks([$block]);
        $vars['block_contact_us'] = _block_get_renderable_array($blocks);

        // программно вставить блок Рекомендуемые
        $block = block_load("ext_block", 'custom-block-recommended');
        $blocks = _block_render_blocks([$block]);
        $vars['block_recommended'] = _block_get_renderable_array($blocks);
      }

      // секция Медиа
      elseif ($vars['section'] == 'media') {
        $view = views_get_view('video');
        $view->set_display('block_1');
        $view->set_arguments([$node->nid]);
        $view->get_total_rows = true;
        $view->pre_execute();
        $view->execute();
        if ($view->total_rows) {
          $vars['media_video_block'] = $view->render();
          if ($view->total_rows > 2) {
            $vars['media_video_more_link'] = '<a href="' . url('video', ['query' => ['preparation' => $node->nid]]) . '">' . t('Show all') . ' ></a>';
          } else {
            $vars['media_video_more_link'] = '<a href="' . url('video') . '">' . t('Show others') . ' ></a>';
          }
        }

        $view = views_get_view('blog');
        $view->set_display('block_1');
        $view->set_arguments([$node->nid]);
        $view->get_total_rows = true;
        $view->pre_execute();
        $view->execute();
        if ($view->total_rows) {
          $vars['media_blog_block'] = $view->render();
          if ($view->total_rows > 2) {
            $vars['media_blog_more_link'] = '<a href="' . url('blog', ['query' => ['preparation' => $node->nid]]) . '">' . t('Show all') . ' ></a>';
          }
          else {
            $vars['media_blog_more_link'] = '<a href="' . url('blog') . '">' . t('Show others') . ' ></a>';
          }
        }
      }

      // секция Файлы
      elseif ($vars['section'] == 'faily') {

      }

    }
  }

  // -- Тип Препараты в поле
  if ($node->type == 'season' && $vars['view_mode'] == 'full') {
    $vars['pvp_info'] = sec_pvp_get_pvp_info($node->nid);
  }

  // -- Автор
  if ($vars['display_submitted']) {
    if ($vars['view_mode'] == 'full') {
      if ($node->uid) {
        $author_info = ext_user_get_user_info($node->uid);
      } else {
        $author_info = ext_user_get_dumb_user_info();
      }
      $vars['author'] = theme('card_contact', $author_info);
    }
  }
}

/**
 * Implements hook_node_presave()
 */
function ext_node_node_presave($node)
{
  if (in_array($node->type, ['article', 'blog', 'review', 'weed', 'disease', 'pest'])) {
    // обработка текста перед сохранением
    require_once(drupal_get_path('module', 'ext_node') . '/includes/preprocessors.ext_node.inc');
    ext_node_prepare_content_to_save($node);
  }
}

/**
 * Implements hook_form_alter().
 */
function ext_node_form_alter(&$form, &$form_state, $form_id)
{
  if ($GLOBALS['theme'] != 'seven' && isset($form["revision_information"]["#access"])) {
    $form["revision_information"]["#access"] = false;
    $form["options"]["#weight"] = $form["author"]["#weight"] - 1;
  }
}

/**
 * Implements hook_form_FORMID_alter().
 */
function ext_node_form_node_form_alter(&$form, &$form_state)
{
  if (in_array($form["type"]["#value"], ['article', 'blog', 'review', 'weed', 'disease', 'pest'])) {
    // убрать неиспользуемые опции
    $form["options"]["promote"]["#access"] = false;
    $form["options"]["sticky"]["#access"] = false;

    // изменить формат поля Body на редактор по умолчанию
    if (isset($form["body"])) {
      $lang = $form["body"]["#language"];
      if ($form["body"][$lang][0]["#type"] == 'text_format' && !$form["body"][$lang][0]["#format"]) {
        $form["body"][$lang][0]["#format"] = 'filtered_html';
      }
    }

    // предварительная обработка текстов
    require_once (drupal_get_path('module', 'ext_node') . '/includes/preprocessors.ext_node.inc');
    ext_node_prepare_content_to_edit($form);
  }
}


/**
 * Implements hook_entity_property_info_alter.
 */
function ext_node_entity_property_info_alter(&$info)
{
  // добавить всем типам материалов поле веса в поисковом индексе
  $info['node']['properties']['search_sort_order'] = array(
    'type' => 'integer',
    'label' => t('Search sort order'),
    'description' => 'Кастомное поле веса материала для сортировки в поиске',
    'getter callback' => 'ext_node_search_sort_order_getter_callback',
  );
}
function ext_node_search_sort_order_getter_callback($item)
{
  // определить вес по типу контента
  $weight = 999;

  // порядок вывода материалов в поиске
  $arr = ['preparation', 'season', 'review', 'blog', 'article', 'culture', 'weed', 'pest', 'disease'];

  $index = array_search($item->type, $arr);

  return $index !== false ? $index : $weight;
}
