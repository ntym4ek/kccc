<?php

include 'includes/calc.agrocalc.module';

const VOCAB_GROW_CLASSIFICATION = 12;
const VOCAB_REGIONS = 8;

/**
 * Implements hook_menu().
 */
function agrocalc_menu()
{
  $items['agrocalc'] = array(
    'title' => t('Agro Calculator'),
    'description' => t('Agro Calculator'),
    'page callback' => 'drupal_get_form',
    'page arguments' => ['agrocalc_form'],
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function agrocalc_theme()
{
  return [
    'agrocalc_form' => [
      'render element' => 'form',
      'template' => 'templates/program-form',
    ],
    'protection_program' => array(
      'variables' => array('program' => NULL),
      'template' => 'templates/protection-program',
    ),
  ];
}

function agrocalc_form($from, &$form_state)
{
  $form = [
    '#prefix' => '<div id="agrocalc-form-wrapper">',
    '#suffix' => '</div>',
    '#attributes' => ['class' => ['agrocalc-form']],
    'params' => [
      '#type' => 'container',
      'field' => ['#type' => 'container', '#attributes' => ['class' => ['params']]],
    ],
    'actions' => ['#type' => 'container', '#attributes' => ['class' => ['form-actions']]],
  ];
  $form['#attached']['js'] = [
    'https://unpkg.com/@popperjs/core@2/dist/umd/popper.min.js',
    'https://unpkg.com/tippy.js@6/dist/tippy-bundle.umd.js',
    drupal_get_path('module', 'agrocalc') . '/js/agrocalc.js',
  ];


  // Дефолтные переменные ------------------------------------------------------
  $culture_id = empty($form_state['input']['culture']) ? '' : $form_state['input']['culture'];
  $stage_id = empty($form_state['input']['stage']) ? '' : $form_state['input']['stage'];
  $area = empty($form_state['input']['area']) ? '1000' : $form_state['input']['area'];
  $seed = empty($form_state['input']['seed']) ? '100' : $form_state['input']['seed'];
  if ($area && !$seed) {
      $seed = 100;
      $form_state['input']['seed'] = $seed;
      $form_state['values']['seed'] = $seed;
  }
  if (isset($form_state['triggering_element']) && $form_state['triggering_element']['#name'] == 'culture') {
      unset($form_state['input']['weeds']); unset($form_state['values']['weeds']);
      unset($form_state['input']['pests']); unset($form_state['values']['pests']);
      unset($form_state['input']['diseases']); unset($form_state['values']['diseases']);
  }
  $weed_ids     = empty($form_state['values']['weeds']) ? [] : array_values($form_state['values']['weeds']);
  $pest_ids     = empty($form_state['values']['pests']) ? [] : array_values($form_state['values']['pests']);
  $disease_ids  = empty($form_state['values']['diseases']) ? [] : array_values($form_state['values']['diseases']);
  $desic        = empty($form_state['values']['desic']) ? '' : $form_state['values']['desic'];
  $fert         = empty($form_state['values']['fert']) ? '' : $form_state['values']['fert'];


  // список Культур, для которых есть Регламенты -------------------------------
  $query = db_select('node', 'n');
  $query->condition('n.type', 'culture');
  $query->condition('n.status', 1);
  $query->distinct();
  $query->innerJoin('field_data_field_cultures', 'fc', 'fc.field_cultures_target_id = n.nid');
  $query->condition('fc.bundle', 'field_prep_reglaments');
  $query->fields('n', array('nid', 'title'));
  $query->orderby('n.title');

  $results = $query->execute()->fetchAllKeyed();

  $options = ['' => t('Choose option')] + $results;
  $form['params']['field']['culture'] = array(
    '#type' => 'select',
    '#title' => t('Culture'),
    '#options' => $options,
    '#default_value' => $culture_id,
    '#ajax' => array(
        'callback' => 'agrocalc_form_refresh',
        'wrapper' => 'agrocalc-form-wrapper',
    ),
  );


  // список Фаз, для которых есть Регламенты по Культуре -----------------------
  if ($culture_id) {
    $query = db_select('taxonomy_term_data', 't');
    $query->condition('t.vid', VOCAB_GROW_CLASSIFICATION);
    $query->fields('t', array('tid', 'name'));
    $query->orderBy('t.weight');

    $query->innerJoin('field_data_field_reg_treat_start', 'frts', 'frts.field_reg_treat_start_tid = t.tid');
    $query->condition('frts.bundle', 'field_prep_reglaments');
    $query->innerJoin('field_data_field_cultures', 'fc', 'fc.entity_id = frts.entity_id');
    $query->condition('fc.bundle', 'field_prep_reglaments');
    $query->condition('fc.field_cultures_target_id', $culture_id);
    $results = $query->execute()->fetchAllKeyed();
  }
  $options = ['all' => t('All phases')] + $results;
  $form['params']['field']['stage'] = array(
    '#type' => 'select',
    '#title' => t('Culture phase'),
    '#options' => $options,
    '#disabled' => $culture_id ? false : true,
    '#default_value' => $stage_id,
  );

  // Площадь посева ------------------------------------------------------------
  $form['params']['field']['area'] = array(
    '#type' => 'textfield',
    '#title' => t('Area, he'),
    '#disabled' => $culture_id ? false : true,
    '#default_value' => $area,
  );

  // Норма высева --------------------------------------------------------------
  $form['params']['field']['seed'] = array(
    '#type' => 'textfield',
    '#title' => t('Seed ratio, kg/he'),
    '#disabled' => $culture_id ? false : true,
    '#default_value' => $seed,
  );

  if ($culture_id) {
    $form['params']['problem'] = ['#type' => 'container', '#attributes' => ['class' => ['params']]];
    $form['params']['addon'] = ['#type' => 'container', '#attributes' => ['class' => ['params']]];


    // список всех Сорняков ------------------------------------------------------
    $query = db_select('node', 'n');
    $query->condition('n.type', 'weed');
    $query->condition('n.status', 1);
    $query->fields('n', ['nid', 'title']);
    $query->orderBy('n.title');
    $results = $query->execute()->fetchAllKeyed();

    $options = $results;
    $form['params']['problem']['weeds'] = [
      '#type' => 'select',
      '#title' => t('Weeds'),
      '#options' => $options,
      '#chosen' => TRUE,
      '#attributes' => ['class' => ['chosen-select']],
      '#multiple' => TRUE,
      '#default_value' => $weed_ids,
      '#disabled' => $culture_id ? FALSE : TRUE,
    ];

    // todo список Вредителей по Культуре ----------------------------------------
    $query = db_select('node', 'n');
    $query->condition('n.status', 1);
    $query->condition('n.type', 'pest');
    $query->condition('n.status', 1);
    $query->fields('n', ['nid', 'title']);
    $query->orderBy('n.title');
    $results = $query->execute()->fetchAllKeyed();

    $options = $results;
    $form['params']['problem']['pests'] = [
      '#type' => 'select',
      '#title' => t('Pests'),
      '#options' => $options,
      '#chosen' => TRUE,
      '#attributes' => ['class' => ['chosen-select']],
      '#multiple' => TRUE,
      '#default_value' => $pest_ids,
      '#disabled' => $culture_id ? FALSE : TRUE,
    ];

    // todo список Болезней по Культуре ------------------------------------------
    $query = db_select('node', 'n');
    $query->condition('n.status', 1);
    $query->condition('n.type', 'disease');
    $query->condition('n.status', 1);
    $query->fields('n', ['nid', 'title']);
    $query->orderBy('n.title');
    $results = $query->execute()->fetchAllKeyed();

    $options = $results;
    $form['params']['problem']['diseases'] = [
      '#type' => 'select',
      '#title' => t('Diseases'),
      '#options' => $options,
      '#chosen' => TRUE,
      '#attributes' => ['class' => ['chosen-select']],
      '#multiple' => TRUE,
      '#default_value' => $disease_ids,
      '#disabled' => $culture_id ? FALSE : TRUE,
    ];

    // Дополнительные опции ------------------------------------------------------
    $form['params']['addon']['desic'] = [
      '#type' => 'checkbox',
      '#title' => t('desiccants'),
      '#disabled' => $culture_id ? FALSE : TRUE,
      '#default_value' => $desic,
    ];
    $form['params']['addon']['fert'] = [
      '#type' => 'checkbox',
      '#title' => t('fertilizers'),
      '#disabled' => $culture_id ? FALSE : TRUE,
      '#default_value' => $fert,
    ];


    /**
     * $parameters['culture_id'] - список культур из программы или явно заданная культура
     * $parameters['stage_id'] - фильтр по фазе культуры
     * $parameters['weeds_arr'], $parameters['pests_arr'], $parameters['diseases_arr'] - фильтр по вредным объектам
     * $parameters['desiccants'] - добавить десиканты
     * $parameters['fertilizers'] - добавить удобрения
     */
    if ((!isset($form_state['triggering_element']) || $form_state['triggering_element']['#name'] != 'culture')) {
      $hobjects = [
        CAT_WEED    => $weed_ids,
        CAT_PEST    => $pest_ids,
        CAT_DISEASE => $disease_ids,
      ];

      $program = _reglaments_get_protection_system([
        'culture_id' => $culture_id,
        'stage_id' => $stage_id,
        'area' => $area,
        'seed' => $seed,
        'hobjects' => $hobjects,
        'desiccants' => $desic,
        'fertilizers' => $fert,
      ]);

      $form_state['storage']['program'] = $program;

      //  вывести список препаратов
      $content = '';
      if ($program['preps'] || $program['hobjects']['missing']) {
        if ($program['preps']) {
          foreach ($program['preps'] as $hocatid => $hobject_cat) {
            $hocat_title = '';
            if ($hocatid == CAT_WEED) $hocat_title = t('for weeds');
            if ($hocatid == CAT_DISEASE) $hocat_title = t('for diseases');
            if ($hocatid == CAT_PEST) $hocat_title = t('for pests');
            if ($hocat_title) {
              $content .= '<div class="col-xs-12"><h4>' . $hocat_title . '</h4></div>';
            }
            foreach ($hobject_cat as $nid => $prep) {
              $content .= '<div class="view-row col-xs-12">';
              $content .=   theme('card_product_h', ['product' => $prep['info'], 'addon' => $prep['regls'], 'inline_link' => true]);
              $content .= '</div>';
            }
          }
        }
        // добавляем сообщение под результатом расчёта
        if ($program['hobjects']['missing']) {
          $content .= '<div class="view-empty"><p>' . t('Our calculator could not find preparations for next harmful objects: @hobjects. But you can still send the request to our experts and they will help you to get protection system.', ['@hobjects' => drupal_strtolower($program['hobjects']['missing']['formatted'])]) . '</p></div>';
        }
      } else {
        $content .= '<div class="view-empty"><p>' . t('No products were found, try changing the filters.') . '</p></div>';
      }

      // выводим программу
      $view = [
        'id' => 'program',
        'classes' => 'view view-program',
        'content' => $content,
      ];
      $form['program'] = ['#markup' => theme('custom_view', ['view' => $view])];

      // форма отправки запроса
      $form['request'] = ['#type' => 'container', '#attributes' => ['id' => 'request', 'class' => ['request']]];

      $query = db_select('taxonomy_term_data', 't');
      $query->condition('t.vid', VOCAB_REGIONS);
      $query->innerJoin('taxonomy_term_hierarchy', 'h', 'h.tid = t.tid');
      $query->condition('h.parent', 0);
      $query->fields('t', ['tid', 'name']);
      $regions = $query->execute()->fetchAllKeyed();

      $form['request']['region'] = [
        '#type' => 'select',
        '#title' => t('Region', [], ['context' => 'representative']),
        '#options' => $regions,
      ];
      $form['request']['name'] = [
        '#type' => 'textfield',
        '#title' => t('Name', [], ['context' => 'user']),
      ];
      $form['request']['phone'] = [
        '#type' => 'textfield',
        '#title' => t('Phone'),
      ];
      $form['request']['email'] = [
        '#type' => 'textfield',
        '#title' => t('E-Mail'),
      ];
      $form['actions1'] = [
        '#type' => 'container',
        '#attributes' => ['class' => ['form-actions']],
      ];
      $form['actions1']['fz152_agreement'] = [
        '#name' => 'fz152-agreement',
        '#type' => 'item',
        '#markup' => variable_get_value('fz152_checkbox_title'),
      ];
      $form['actions1']['submit'] = [
        '#type' => 'submit',
        '#value' => t('Send request'),
        '#name' => 'send',
        '#attributes' => ['class' => ['btn-primary', 'btn-wide']],
        '#submit' => ['agrocalc_form_submit'],
      ];
    }
  }

  // кнопка Рассчитать ---------------------------------------------------------
  $form['actions']['calc'] = [
    '#type' => 'button',
    '#value' => t('Find a solution'),
    '#name' => 'calc',
    '#attributes' => ['class' => ['btn-brand', 'btn-wide']],
    '#disabled' => $culture_id ? FALSE : TRUE,
    '#ajax' => [
      'callback' => 'agrocalc_form_refresh',
      'wrapper' => 'agrocalc-form-wrapper',
    ],
  ];

  return $form;
}

function agrocalc_form_refresh($form, $form_state)
{
    return $form;
}

function agrocalc_form_validate($form, &$form_state)
{
  if ($form_state['triggering_element']['#name'] == 'calc' && !$form_state['values']['area']) {
    form_set_error('area', t('Set area of field'));
  }

  if ($form_state['submitted']) {
    if (empty($form_state['values']['region'])) {
      form_set_error('name', t('Set your region') );
    } else {
      $query = db_select('taxonomy_term_data', 't');
      $query->condition('t.tid', $form_state['values']['region']); // словарь 'regions'
      $query->fields('t', array('name'));
      if ($region = $query->execute()->fetchField()) $form_state['values']['region'] = $region;
    }
    if (!valid_email_address($form_state['values']['email'])) {
      form_set_error('email', 'Необходимо заполнить поле E-Mail');
    }
    if (empty($form_state['values']['phone'])) {
      form_set_error('phone', 'Необходимо заполнить поле Телефон');
    }
    if (empty($form_state['values']['name'])) {
      form_set_error('name', 'Напишите, как к Вам обращаться' );
    }
  }
}

function agrocalc_form_submit($form, &$form_state)
{
  $program = $form_state['storage']['program'];

  $params['mail_to'] = 'manager';
  $params['data'] = [
    'program' => $program,
    'name' => $form_state['values']['name'],
    'phone' => $form_state['values']['phone'],
    'email' => valid_email_address($form_state['values']['email']) ? $form_state['values']['email'] : '',
    'region' => $form_state['values']['region'],
  ];

  // письмо мне
  drupal_mail('ext_mail', 'agro_calculator', 'mega_comp@mail.ru', 'RU', $params, 'bot@kccc.ru');

  // отправка письма менеджеру, в отдел продаж
  if (strpos($_SERVER['HTTP_HOST'], '.local') === false) {
    if (variable_get('email_dep_sales', '')) {
      drupal_mail('ext_mail', 'agro_calculator', variable_get('email_dep_sales', ''), 'RU', $params, 'bot@kccc.ru');
    }
  }

  drupal_set_message('Заявка на детальный расчёт отправлена. В ближайшее время представитель свяжется с Вами.');

  $form_state['rebuild'] = true;
}

/**
 * Pre-processes variables for the "page" theme hook.
 */
function agrocalc_preprocess_page(&$vars)
{
  if ($_GET['q'] == 'agrocalc') {
    $vars['is_title_on'] = false;
  }
}
