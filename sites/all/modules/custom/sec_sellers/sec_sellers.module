<?php

function sec_sellers_menu()
{
  $items['predstaviteli'] = array(
    'title' => 'Regional representatives',
    'description' => t('Regional representatives contacts'),
    'page callback' => 'sec_sellers_page',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Pre-processes variables for the "page" theme hook.
 */
function sec_sellers_preprocess_page(&$vars)
{
  if (arg(0) == 'predstaviteli') {
    $vars['banner_title'] = t('Contacts');
    $vars['is_title_on'] = false;
  }
}

// главная страница
function sec_sellers_page()
{
  $content = '';

  // форма фильтров
  $form = drupal_get_form('sec_sellers_filters_form');

  // список Представителей
  if ($directions = sec_sellers_get_sellers_by_region()) {

    foreach ($directions as $direction) {
      if ($direction['sellers_count']) {
        $content .= '<div class="row">';
        $content .=   '<div class="col-xs-12">' .
                        '<div class="direction">' . $direction['label'] . '<div class="underline"></div></div>' .
                      '</div>';
        $content .= '</div>';

        if ($direction['managers']) {
          $content .= '<div class="row">';
          foreach ($direction['managers'] as $manager) {
            $manager['active'] = true;
            $content .= '<div class="col-xs-12 col-md-6">';
            $content .=   theme('card_contact', $manager);
            $content .= '</div>';
          }
          $content .= '</div>';
        }

          if ($direction['areas']['managers']) {
            $content .= '<div class="row">';
            foreach ($direction['areas']['managers'] as $manager) {
              $manager['active'] = true;
              $content .= '<div class="col-xs-12 col-md-6">';
              $content .=   theme('card_contact', $manager);
              $content .= '</div>';
            }
            $content .= '</div>';
          }
          if ($direction['areas']) {
            $content .= '<div class="row">';
            foreach ($direction['areas']['sellers'] as $seller) {
              $seller['active'] = true;
              $content .= '<div class="col-xs-12 col-md-6">';
              $content .=   theme('card_contact', $seller);
              $content .= '</div>';
            }
            $content .= '</div>';
          }
      }
    }
  } else {
    $content .= t('No representatives were found, change the filters.');
  }

  return  '<div id="sellers" class="sellers view">' .
            '<div class="sellers-intro">' .
              '<div class="row">' .
                '<div class="col-xs-12 col-md-7 col-lg-6">' .
                  '<div class="intro">' .
                    t('Regional managers and representatives of the company in the regions will help you create an optimal program for protecting your crop and buy the necessary herbicides, insecticides, fungicides, seed protectants and fertilizers.') .
                  '</div>' .
                '</div>' .
                '<div class="col-xs-12 col-md-5 col-lg-6">' .
                  '<div class="image">' .
                    '<img src="/sites/all/modules/custom/sec_sellers/images/image.jpg">' .
                  '</div>' .
                '</div>' .
              '</div>' .
            '</div>' .
            '<div class="sellers-filter">' .
              drupal_render($form) .
            '</div>' .
            '<div class="sellers-content">' .
              $content .
            '</div>' .
          '</div>';
}

function sec_sellers_filters_form($from, &$form_state)
{
  $filters = sec_sellers_get_filters_set();

  $form['filters'] = [
    '#type' => 'container',
    '#attributes' => ['class' => ['row']],
  ];

  $reg_options = ['all' => t('All')];
  foreach($filters['areas']['options'] as $id => $area) {
    $reg_options[$id] = $area;
  }

  $form['filters']['area'] = [
    '#type' => 'select',
    '#title' => t('Area'),
    '#options' => $reg_options,
    '#default_value' => $filters_set['areas']['current_id'] ?? null,
    '#ajax' => array(
      'callback' => 'sec_sellers_filters_form_ajax',
      'wrapper' => '',
    ),
    '#prefix' => '<div class="col-xs-12 col-md-4">',
    '#suffix' => '</div>',
  ];

  return $form;
}

function sec_sellers_filters_form_ajax($form, $form_state)
{
  // отправить новое содержимое страницы
  $commands[] = ajax_command_replace('#sellers', sec_sellers_page());

  return ['#type' => 'ajax', '#commands' => $commands];
}

/**
 * Вернуть массив Регионов, Округов или Направлений
 * @param $level
 * 'regions' - регионы, 'areas' - округа, 'directions' - направления
 ** @param $parent - родительская категория, для которой вернуть результат
 *
 *
 * @return array
 */
function sec_sellers_get_regions($level = 'regions', $parent = null, $include_siblings = false)
{
  $regions = [];
  $depth = array_search($level, ['directions', 'areas', 'regions']);

  if ($terms = taxonomy_get_tree(taxonomy_vocabulary_machine_name_load('regions')->vid, 0, null, true)) {
    foreach($terms as $term) {
      if ((($include_siblings && $term->depth <= $depth) || (!$include_siblings && $term->depth == $depth)) && (!$parent || in_array($parent, $term->parents))) {
        $term_wr = entity_metadata_wrapper('taxonomy_term', $term);
        $regions[] = [
          'id' => $term->tid,
          'label' => $term_wr->label(),
        ];
      }
    }
  }

  // сортировка по Имени
//  usort($regions, function($a, $b) {
//    return $a['label'] <=> $b['label'];
//  });

  return $regions;
}

/**
 * Вернуть список сотрудников Департамента продаж
 */
function sec_sellers_get_sellers_by_region()
{
  $sellers = [];

  $filters = sec_sellers_get_filters_set();

  foreach (sec_sellers_get_regions('directions') as $direction) {
    $did = $direction['id'];
    foreach (sec_sellers_get_regions('areas', $did) as $area) {
      // если Округ не задан или совпадает с выбранным
      if (empty($filters['areas']['current_id']) || $area['id'] == $filters['areas']['current_id']) {

        // заполнить руководителей Направления
        if (empty($sellers[$did])) {
          $sellers[$did] = ['id' => $did, 'label' => $direction['label'], 'sellers_count' => 0, 'managers' => [], 'areas' => []];
        }
        if ($uids = sec_sellers_get_users_at_region_list([$did])) {
          foreach ($uids as $uid) {
            $user_info = ext_user_get_user_info($uid);
            if ($user_info["staff"]["office"]["id"] == OFFICE_SALES_DIR_HEAD) {
              $sellers[$did]['managers'][$uid] = $user_info;
            }
          }
          $sellers[$did]['sellers_count'] += count($uids);
        }

        // заполнить руководителей Округа
        $aid = $area['id'];
        if (empty($sellers[$did]['areas'])) {
          $sellers[$did]['areas'] = ['managers' => [], 'sellers' => []];
        }
        if ($uids = sec_sellers_get_users_at_region_list([$aid])) {
          foreach ($uids as $uid) {
            $user_info = ext_user_get_user_info($uid);
            if (in_array($user_info["staff"]["office"]["id"], [OFFICE_SALES_MANAGER, OFFICE_DEALER])) {
              $sellers[$did]['areas']['managers'][$uid] = $user_info;
            }
          }
          $sellers[$did]['sellers_count'] += count($uids);
        }

        $region_ids = [];
        foreach (sec_sellers_get_regions('regions', $aid) as $region) $region_ids[] = $region['id'];

        // Представители выбранных регионов
        if ($uids = sec_sellers_get_users_at_region_list($region_ids)) {
          foreach ($uids as $uid) {
            $user_info = ext_user_get_user_info($uid);
            if (in_array($user_info["staff"]["office"]["id"], [OFFICE_SALES_REPRESENTATIVE])) {
              $sellers[$did]['areas']['sellers'][$uid] = $user_info;
            }
          }
          $sellers[$did]['sellers_count'] += count($uids);
        }

      }
    }
    if (empty($sellers[$did]['sellers_count'])) { unset($sellers[$did]); }
  }

  return $sellers;
}

/**
 * Вернуть id пользователей для заданных регионов (округов, направлений)
 * @param $region_ids
 *
 * @return false
 */
function sec_sellers_get_users_at_region_list($region_ids)
{
  if ($region_ids) {
    $dbr = db_select('profile', 'p');
    $dbr->innerJoin('field_data_field_regions', 'fr', 'fr.entity_id = p.pid');
    $dbr->condition('fr.bundle', 'staff');
    $dbr->condition('fr.field_regions_tid', $region_ids, 'IN');
    $dbr->innerJoin('users', 'u', 'u.uid = p.uid');
    $dbr->condition('u.status', 1);
    $dbr->addField('p', 'uid');
    $dbr->distinct();
    $users = $dbr->execute()->fetchCol();
  }

  return $users ?? false;
}

/**
 * Вернуть массив возможных значений фильтров и выбранные значения
 *
 * @return array
 */
function sec_sellers_get_filters_set()
{
  $key = drupal_hash_base64($_GET['q']);
  $filters = &drupal_static(__FUNCTION__ . $key);
  if (!isset($filters)) {

    $filters = [
      'areas' => ['current_id' => NULL, 'options' => []],
    ];

    // Категории
    $areas = sec_sellers_get_regions('areas');
    foreach ($areas as $area) {
      $filters['areas']['options'][$area['id']] = $area['label'];
    }
    if ($_GET['q'] == 'system/ajax' && isset($_POST["area"]) && is_numeric($_POST["area"])) {
      $filters['areas']['current_id'] = $_POST["area"];
    }
    elseif (isset($_GET['area']) && is_numeric($_GET['area'])) {
      $filters['areas']['current_id'] = $_GET['area'];
    }
  }

  return $filters;
}

